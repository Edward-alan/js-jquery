通过一个例子演示一下正则表达式与我们传统的js有哪些不同的地方。
例：找出字符串中的所有数字
传统写法:省略 

var str = 'haj123sdk54hask33dkhalsd879';
console.log(findNum(str));
function findNum(str){
	return str.match(/\d+/g);
}

什么是正则?
正则 : 也叫做规则，让计算机能够读懂人类的规则（正则都是操作字符串的）


用处：比如注册，用户名和邮箱的格式验证

给定一个正则表达式和另一个字符串，我们可以达到如下的目的：1. 给定的字符串是否符合正则表达式的过滤逻辑（称作“匹配”）；2. 可以通过正则表达式，从字符串中获取我们想要的特定部分。 

正则表达式的特点()是：1. 灵活性、逻辑性和功能性非常的强；2. 可以迅速地用极简单的方式达到字符串的复杂控制。

正则的写法，正则其实也是一个系统对象。
var re = //;	//简写
var re = new RegExp();  // 全称，Reg是正则的意思，Exp是表达式的意思。
注意：平时推荐大家使用简写的形式。因为简写的方式比全称的写法性能要好。但是有一种形式（正则需要传参的时候），必须用全称的写法。




但是我们发现一个细节，var re = //;这里只写两个//，浏览器会把这里认为是注释。所以我们尽量不要让这里为空。可以给它添加点东西。

正则表达式的常用方法
正则下面的方法：exec、test
字符串下面的方法：search、match、replace、split
